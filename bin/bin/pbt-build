#!/usr/bin/perl

$| = 1;

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../lib";

use Cwd ('abs_path');
use Getopt::Long;
use Qbt::Pbt::Utils;

my @TYPES = ('lib', 'bin');

my $dist = 0;

my @options =
(
    'dist!' => \$dist,
);

GetOptions(@options) || die;

my %cmd = (map { $_ => ["$FindBin::Bin/pbt-unify"] } @TYPES);

my $add_package = sub
{
    my $dir = shift;
    -d $dir || die;
    for my $type (@TYPES)
    {
        my $subdir = "$dir/$type";
        if(-d $subdir)
        {
            push @{$cmd{$type}}, ('--copy', $subdir);
        }
    }
};

if($dist)
{
    my $iad = $ENV{'INPUT_ARTIFACTS_DIR'} || die;
    my $strong = "$iad/strong";
    -d $strong || die;

    for my $package (@{Qbt::Pbt::Utils::slurp_dir($strong)})
    {
        $add_package->("$strong/$package");
    }
}

$add_package->($ENV{'PACKAGE_DIR'});

my $oad = $ENV{'OUTPUT_ARTIFACTS_DIR'} || die;
-d $oad || die;
for my $type (@TYPES)
{
    push @{$cmd{$type}}, ('--out', "$oad/$type");
}

for my $type (@TYPES)
{
    my $cmd = $cmd{$type};
    (system(@$cmd) == 0) || die;
}
